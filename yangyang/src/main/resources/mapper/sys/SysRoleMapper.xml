<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yg.pj.sys.dao.SysRoleDao">
<cache 
	eviction="LRU"
	flushInterval="600000"   
	size="512"
	readOnly="false" />  <!-- 使用mybatis 二级缓存 -->  <!--刷新频率  -->
	
	<!-- sql元素用于对共性进行提取 -->
	<!-- 此共性是 对于数据筛选的条件是 根据用户名筛选数据 -->
	<sql id="queryWhereId">
		<where>
			<if test="name!=null and name!=''">
				name like concat("%",#{name},"%")
			</if>
		</where>
	</sql>


	<!-- 通过用户名 查询用户角色数量 getRowCount -->
	<select id="getRowCount" resultType="int">
		select count(*)
		from sys_roles
		<include refid="queryWhereId" />
	</select>

	<!-- Dao层 通过用户名 起始页 页面大小 获取角色列表信息 findPageObjects -->


	<select id="findPageObjects"
		resultType="com.yg.pj.sys.entity.SysRole" >
		select *
		from sys_roles
		<include refid="queryWhereId" />
		order by createdTime desc
		limit #{startIndex},#{pageSize}
	</select>


	<!-- 删除角色-菜单关系 直接根据角色ID删除 -->
	<delete id="deleteObjects">
		delete from sys_roles
		where id=#{id};
	</delete>

	<!-- insert 保存角色信息 parameterType保存时需要取数据存放的参数 -->
	<!-- useGeneratedKeys keyProperty 获取自增id 放入bean -->

	<insert id="insert" parameterType="com.yg.pj.sys.entity.SysRole"
		useGeneratedKeys="true" keyProperty="id">
		insert into sys_roles
		(id,name,note,createdTime,modifiedTime,
		createdUser,modifiedUser)
		values
		(null,#{name},#{note},now(),now(),
		#{createdUser},#{modifiedUser})
	</insert>
	
	
	  <!-- resultMap一般用于自定义映射或一些关联查询中 -->
	  <resultMap type="com.yg.pj.sys.common.vo.SysRoleMenuVo" id="roleMenuVoMap">
	     <!-- 假如基于id做关联查询，又希望将id值存储到值对象，
                           可以对id进行专门映射 -->
         <id property="id" column="id"/>
          <!-- collection一般应用于one2many查询 -->
          <collection property="menuIds" 
          select="com.yg.pj.sys.dao.SysRoleMenuDao.findMenuIdByRoleId"
          column="id" ></collection>
	  </resultMap>
	
	
	<!-- 通过角色id 查询角色信息 -->
	<select id="findObjectById" resultMap="roleMenuVoMap">
	select * from sys_roles where id=#{id};
	</select>
	
	
	<update id="updateObject" parameterType="com.yg.pj.sys.entity.SysRole">
	update sys_roles 
set name=#{name},
note=#{note},createdTime=#{createdTime},
createdUser=#{createdUser},createdUser=#{createdUser},
modifiedUser=#{modifiedUser} 
where id=#{id};
	</update>
	
	
	
	<select id="finds" resultType="com.yg.pj.sys.entity.SysRole">
	select * from sys_roles;
	</select>

</mapper>
